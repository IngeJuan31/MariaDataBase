-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.adjuntos_mensaje
(
    id_adjunto serial NOT NULL,
    id_mensaje integer NOT NULL,
    tipo_archivo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    nombre_archivo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    ruta_archivo text COLLATE pg_catalog."default" NOT NULL,
    "tama√±o_bytes" integer NOT NULL,
    fecha_subida timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    metadata jsonb,
    CONSTRAINT adjuntos_mensaje_pkey PRIMARY KEY (id_adjunto)
);

CREATE TABLE IF NOT EXISTS public.administradoras_pensiones
(
    id_administradoras_pensiones integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_administradora character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT administradoras_pensiones_pkey PRIMARY KEY (id_administradoras_pensiones)
);

CREATE TABLE IF NOT EXISTS public.anexo_documentos
(
    id_documento_contrato integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    entrevista character varying(100) COLLATE pg_catalog."default",
    prueba_tecnica character varying(100) COLLATE pg_catalog."default",
    remision character varying(100) COLLATE pg_catalog."default",
    arl character varying(100) COLLATE pg_catalog."default",
    eps character varying(100) COLLATE pg_catalog."default",
    caja_compensacion character varying(100) COLLATE pg_catalog."default",
    fondo_pension character varying(100) COLLATE pg_catalog."default",
    bancos character varying(100) COLLATE pg_catalog."default",
    resultados_medicos character varying(100) COLLATE pg_catalog."default",
    resultados character varying(100) COLLATE pg_catalog."default",
    id_contratacion integer NOT NULL,
    CONSTRAINT anexo_documentos_pkey PRIMARY KEY (id_documento_contrato)
);

CREATE TABLE IF NOT EXISTS public.anexos_docente
(
    id_anexo_docente serial NOT NULL,
    entrevista character varying(255) COLLATE pg_catalog."default",
    prueba_tecnica character varying(255) COLLATE pg_catalog."default",
    remision character varying(255) COLLATE pg_catalog."default",
    arl character varying(255) COLLATE pg_catalog."default",
    eps character varying(255) COLLATE pg_catalog."default",
    caja_compensacion character varying(255) COLLATE pg_catalog."default",
    fondo_pension character varying(255) COLLATE pg_catalog."default",
    bancos character varying(255) COLLATE pg_catalog."default",
    resultados_medicos character varying(255) COLLATE pg_catalog."default",
    resultados character varying(255) COLLATE pg_catalog."default",
    id_contratacion_docente integer NOT NULL,
    CONSTRAINT anexos_docente_pkey PRIMARY KEY (id_anexo_docente)
);

CREATE TABLE IF NOT EXISTS public.anio
(
    id_anio serial NOT NULL,
    anio_academico integer NOT NULL,
    estado boolean,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT anio_pkey PRIMARY KEY (id_anio)
);

CREATE TABLE IF NOT EXISTS public.anio_periodo
(
    id_anio_periodo serial NOT NULL,
    id_anio integer NOT NULL,
    id_periodo integer NOT NULL,
    fecha_inicio date NOT NULL,
    fecha_fin date NOT NULL,
    estado boolean DEFAULT true,
    id_sede integer NOT NULL,
    CONSTRAINT anio_periodo_pkey PRIMARY KEY (id_anio_periodo),
    CONSTRAINT unique_anio_periodo UNIQUE (id_anio, id_periodo, id_sede)
);

CREATE TABLE IF NOT EXISTS public.areas
(
    id_area serial NOT NULL,
    nombre_area character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT areas_pkey PRIMARY KEY (id_area)
);

CREATE TABLE IF NOT EXISTS public.arl
(
    id_arl integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_arl character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT arl_pkey PRIMARY KEY (id_arl)
);

CREATE TABLE IF NOT EXISTS public.auditoria
(
    id_auditoria serial NOT NULL,
    tabla_modificada character varying(100) COLLATE pg_catalog."default",
    accion character varying(20) COLLATE pg_catalog."default",
    usuario character varying(100) COLLATE pg_catalog."default",
    fecha timestamp without time zone,
    datos_previos jsonb,
    datos_nuevos jsonb,
    sentencia_sql text COLLATE pg_catalog."default",
    CONSTRAINT auditoria_pkey PRIMARY KEY (id_auditoria)
);

CREATE TABLE IF NOT EXISTS public.auth_group
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_group_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.auth_group_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    group_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.auth_permission
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
    CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename)
);

CREATE TABLE IF NOT EXISTS public.auth_user
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    CONSTRAINT auth_user_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.auth_user_groups
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id)
);

CREATE TABLE IF NOT EXISTS public.auth_user_user_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.bancos
(
    id_banco integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_banco character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT bancos_pkey PRIMARY KEY (id_banco)
);

CREATE TABLE IF NOT EXISTS public.cajas_compensacion
(
    id_caja_compensacion integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_caja character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cajas_compensacion_pkey PRIMARY KEY (id_caja_compensacion)
);

CREATE TABLE IF NOT EXISTS public.cargo
(
    id_cargo integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    estado boolean,
    id_departamento integer NOT NULL,
    id_sede integer,
    CONSTRAINT cargo_pkey PRIMARY KEY (id_cargo),
    CONSTRAINT cargo_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.cartera
(
    id_cartera integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    total numeric(10, 2) NOT NULL,
    monto_pagado numeric(10, 2),
    saldo numeric(10, 2) NOT NULL,
    saldo_a_favor numeric(10, 2),
    id_financiacion integer NOT NULL,
    id_estudiante integer NOT NULL,
    id_concepto integer NOT NULL,
    id_estado_cartera integer NOT NULL DEFAULT 1,
    CONSTRAINT cartera_pkey PRIMARY KEY (id_cartera)
);

CREATE TABLE IF NOT EXISTS public.conceptos_pago
(
    id_concepto integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    aplica_financiacion boolean DEFAULT false,
    CONSTRAINT conceptos_pago_pkey PRIMARY KEY (id_concepto),
    CONSTRAINT conceptos_pago_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.conciliaciones
(
    id_conciliacion integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    estado_conciliacion boolean DEFAULT false,
    fecha_conciliacion timestamp with time zone,
    id_pago integer NOT NULL,
    CONSTRAINT conciliaciones_pkey PRIMARY KEY (id_conciliacion)
);

CREATE TABLE IF NOT EXISTS public.consecutivos_tipo_pago
(
    tipo_pago character varying(10) COLLATE pg_catalog."default" NOT NULL,
    ultimo_numero integer,
    CONSTRAINT consecutivos_tipo_pago_pkey PRIMARY KEY (tipo_pago)
);

CREATE TABLE IF NOT EXISTS public.contador_estudiantes
(
    anio_ingreso integer NOT NULL,
    ultimo_consecutivo integer NOT NULL DEFAULT 0,
    CONSTRAINT contador_estudiantes_pkey PRIMARY KEY (anio_ingreso)
);

CREATE TABLE IF NOT EXISTS public.contratacion_docente
(
    id_contratacion_docente serial NOT NULL,
    id_usuario integer NOT NULL,
    fecha_inicio date NOT NULL DEFAULT CURRENT_DATE,
    fecha_fin date,
    id_banco integer NOT NULL,
    numero_cuenta character varying(30) COLLATE pg_catalog."default" NOT NULL,
    id_tipo_contrato integer NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id_sede integer,
    estado boolean,
    CONSTRAINT contratacion_docente_pkey PRIMARY KEY (id_contratacion_docente),
    CONSTRAINT unique_usuario_tipo_contrato_docentes UNIQUE (id_usuario, id_tipo_contrato)
);

CREATE TABLE IF NOT EXISTS public.contratacion_docente_escuelas
(
    id serial NOT NULL,
    id_contratacion_docente integer NOT NULL,
    id_escuela integer NOT NULL,
    CONSTRAINT contratacion_docente_escuelas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.contrataciones
(
    id_contratacion integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    fecha_inicio date NOT NULL,
    fecha_fin date,
    salario numeric(10, 2) NOT NULL,
    numero_cuenta character varying(20) COLLATE pg_catalog."default",
    estado boolean NOT NULL,
    fecha_creacion timestamp with time zone NOT NULL,
    id_administradoras_pensiones integer,
    id_arl integer,
    id_banco integer,
    id_caja_compensacion integer,
    id_tipo_contrato integer,
    id_usuario integer NOT NULL,
    id_cargo integer,
    id_departamento integer,
    id_riesgo_laboral_id integer,
    id_sede integer,
    CONSTRAINT contrataciones_pkey PRIMARY KEY (id_contratacion)
);

CREATE TABLE IF NOT EXISTS public.contrato_fin
(
    id_contrato_fin integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    fecha_fin date NOT NULL,
    id_contratacion integer NOT NULL,
    id_tipo_despido integer NOT NULL,
    CONSTRAINT contrato_fin_pkey PRIMARY KEY (id_contrato_fin)
);

CREATE TABLE IF NOT EXISTS public.contrato_fin_docente
(
    id_contrato_fin_docente serial NOT NULL,
    id_contratacion_docente integer NOT NULL,
    fecha_fin date NOT NULL,
    id_tipo_despido integer NOT NULL,
    CONSTRAINT contrato_fin_docente_pkey PRIMARY KEY (id_contrato_fin_docente)
);

CREATE TABLE IF NOT EXISTS public.convenios
(
    id_convenio integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_convenio character varying(150) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    estado boolean,
    fecha_creacion timestamp with time zone NOT NULL,
    id_sede integer,
    CONSTRAINT convenios_pkey PRIMARY KEY (id_convenio)
);

CREATE TABLE IF NOT EXISTS public.conversaciones
(
    id_conversacion serial NOT NULL,
    titulo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tipo_conversacion character varying(20) COLLATE pg_catalog."default" NOT NULL,
    fecha_creacion timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ultima_actividad timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    estado boolean NOT NULL DEFAULT true,
    id_creador integer NOT NULL,
    CONSTRAINT conversaciones_pkey PRIMARY KEY (id_conversacion)
);

CREATE TABLE IF NOT EXISTS public.costo_semestre_pensum
(
    id_costo_semestre serial NOT NULL,
    id_pensum integer NOT NULL,
    numero_semestre integer NOT NULL,
    id_anio integer NOT NULL,
    valor_semestre numeric(12, 2) NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT now(),
    CONSTRAINT costo_semestre_pensum_pkey PRIMARY KEY (id_costo_semestre)
);

CREATE TABLE IF NOT EXISTS public.costo_total
(
    id_costo_total serial NOT NULL,
    id_pensum integer NOT NULL,
    id_anio integer NOT NULL,
    valor_total numeric(12, 2) NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT now(),
    CONSTRAINT costo_total_pkey PRIMARY KEY (id_costo_total),
    CONSTRAINT unico_pensum_anio UNIQUE (id_pensum, id_anio)
);

CREATE TABLE IF NOT EXISTS public.costos_hora_escuela_tipo_programa
(
    id_costo serial NOT NULL,
    id_escuela integer NOT NULL,
    id_tipo_programa integer NOT NULL,
    valor_hora numeric(10, 2) NOT NULL,
    activo boolean DEFAULT true,
    id_anio integer,
    CONSTRAINT costos_hora_escuela_tipo_programa_pkey PRIMARY KEY (id_costo),
    CONSTRAINT uq_escuela_tipo_programa_anio UNIQUE (id_escuela, id_tipo_programa, id_anio)
);

CREATE TABLE IF NOT EXISTS public.credenciales
(
    id_credencial integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    username character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fecha_creacion timestamp with time zone NOT NULL,
    id_usuario integer NOT NULL,
    CONSTRAINT credenciales_pkey PRIMARY KEY (id_credencial),
    CONSTRAINT credenciales_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.cuotas
(
    id_cuota integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    numero_cuota integer NOT NULL,
    fecha_pago date NOT NULL,
    monto numeric(10, 2) NOT NULL,
    id_estado_cuota integer DEFAULT 1,
    id_cartera integer NOT NULL,
    CONSTRAINT cuotas_pkey PRIMARY KEY (id_cuota)
);

CREATE TABLE IF NOT EXISTS public.datos_adicionales_usuarios
(
    id serial NOT NULL,
    id_usuario bigint NOT NULL,
    id_ocupacion integer,
    empresa character varying(150) COLLATE pg_catalog."default",
    cargo character varying(100) COLLATE pg_catalog."default",
    celular_empresa character varying(20) COLLATE pg_catalog."default",
    id_tipo_archivo integer,
    documento_identidad character varying COLLATE pg_catalog."default",
    archivo_academico character varying COLLATE pg_catalog."default",
    fecha_registro timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT datos_adicionales_usuarios_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.departamento_laboral
(
    id_departamento integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    estado boolean,
    id_sede integer,
    CONSTRAINT departamento_laboral_pkey PRIMARY KEY (id_departamento),
    CONSTRAINT departamento_laboral_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.departamentos
(
    id_departamento integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    departamento character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT departamentos_pkey PRIMARY KEY (id_departamento)
);

CREATE TABLE IF NOT EXISTS public.descuentos
(
    id_descuento integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_descuento character varying(100) COLLATE pg_catalog."default" NOT NULL,
    porcentaje numeric(5, 2),
    monto numeric(10, 2),
    fecha_inicio date NOT NULL,
    fecha_fin date NOT NULL,
    estado boolean,
    created_at timestamp with time zone NOT NULL,
    id_sede integer NOT NULL,
    CONSTRAINT descuentos_pkey PRIMARY KEY (id_descuento)
);

CREATE TABLE IF NOT EXISTS public.dias
(
    id_dia serial NOT NULL,
    nombre_dia character varying(15) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT dias_pkey PRIMARY KEY (id_dia),
    CONSTRAINT dias_nombre_dia_key UNIQUE (nombre_dia)
);

CREATE TABLE IF NOT EXISTS public.django_admin_log
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    action_time timestamp with time zone NOT NULL,
    object_id text COLLATE pg_catalog."default",
    object_repr character varying(200) COLLATE pg_catalog."default" NOT NULL,
    action_flag smallint NOT NULL,
    change_message text COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_content_type
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    app_label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT django_content_type_pkey PRIMARY KEY (id),
    CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model)
);

CREATE TABLE IF NOT EXISTS public.django_migrations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    app character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    applied timestamp with time zone NOT NULL,
    CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_session
(
    session_key character varying(40) COLLATE pg_catalog."default" NOT NULL,
    session_data text COLLATE pg_catalog."default" NOT NULL,
    expire_date timestamp with time zone NOT NULL,
    CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
);

CREATE TABLE IF NOT EXISTS public.documentos_estudiantes
(
    id_documento_estudiante serial NOT NULL,
    id_estudiante integer NOT NULL,
    tipo_documento character varying(100) COLLATE pg_catalog."default" NOT NULL,
    ruta_archivo text COLLATE pg_catalog."default",
    fecha_subida timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT documentos_estudiantes_pkey PRIMARY KEY (id_documento_estudiante)
);

CREATE TABLE IF NOT EXISTS public.eps
(
    id_eps integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT eps_pkey PRIMARY KEY (id_eps)
);

CREATE TABLE IF NOT EXISTS public.escuelas
(
    id_escuelas serial NOT NULL,
    id_sede integer,
    nombre character varying(255) COLLATE pg_catalog."default",
    tipo character varying(100) COLLATE pg_catalog."default",
    estado boolean,
    CONSTRAINT escuelas_pkey PRIMARY KEY (id_escuelas)
);

CREATE TABLE IF NOT EXISTS public.estado_cartera
(
    id_estado_cartera serial NOT NULL,
    nombre_estado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estado_cartera_pkey PRIMARY KEY (id_estado_cartera),
    CONSTRAINT estado_cartera_nombre_estado_key UNIQUE (nombre_estado)
);

CREATE TABLE IF NOT EXISTS public.estado_civil
(
    id_estado_civil integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estado_civil_pkey PRIMARY KEY (id_estado_civil)
);

CREATE TABLE IF NOT EXISTS public.estado_cuota
(
    id_estado_cuota serial NOT NULL,
    nombre_estado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estado_cuota_pkey PRIMARY KEY (id_estado_cuota),
    CONSTRAINT estado_cuota_nombre_estado_key UNIQUE (nombre_estado)
);

CREATE TABLE IF NOT EXISTS public.estado_estudiante
(
    id_estado_estudiante serial NOT NULL,
    nombre_estado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estado_estudiante_pkey PRIMARY KEY (id_estado_estudiante),
    CONSTRAINT estado_estudiante_nombre_estado_key UNIQUE (nombre_estado)
);

CREATE TABLE IF NOT EXISTS public.estado_financiacion
(
    id_estado_financiacion serial NOT NULL,
    nombre_estado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estado_financiacion_pkey PRIMARY KEY (id_estado_financiacion),
    CONSTRAINT estado_financiacion_nombre_estado_key UNIQUE (nombre_estado)
);

CREATE TABLE IF NOT EXISTS public.estado_matricula_financiera
(
    id_estado serial NOT NULL,
    nombre_estado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estado_matricula_financiera_pkey PRIMARY KEY (id_estado),
    CONSTRAINT estado_matricula_financiera_nombre_estado_key UNIQUE (nombre_estado)
);

CREATE TABLE IF NOT EXISTS public.estado_pago
(
    id_estado_pago serial NOT NULL,
    nombre_estado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estado_pago_pkey PRIMARY KEY (id_estado_pago),
    CONSTRAINT estado_pago_nombre_estado_key UNIQUE (nombre_estado)
);

CREATE TABLE IF NOT EXISTS public.estrato_socioeconomico
(
    id_estrato integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    estrato character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estrato_socioeconomico_pkey PRIMARY KEY (id_estrato)
);

CREATE TABLE IF NOT EXISTS public.estudiantes
(
    id_estudiante serial NOT NULL,
    id_usuario integer NOT NULL,
    id_estado_estudiante integer NOT NULL DEFAULT 1,
    fecha_creacion timestamp without time zone DEFAULT now(),
    fecha_actualizacion timestamp without time zone DEFAULT now(),
    id_anio_periodo integer NOT NULL,
    id_sede integer,
    CONSTRAINT estudiantes_pkey PRIMARY KEY (id_estudiante),
    CONSTRAINT unique_estudiante_usuario UNIQUE (id_usuario)
);

CREATE TABLE IF NOT EXISTS public.etnia
(
    id_etnia integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT etnia_pkey PRIMARY KEY (id_etnia)
);

CREATE TABLE IF NOT EXISTS public.financiaciones
(
    id_financiacion serial NOT NULL,
    id_estudiante integer NOT NULL,
    id_orden integer NOT NULL,
    subtotal numeric(10, 2) NOT NULL,
    total numeric(10, 2) NOT NULL,
    numero_cuotas integer NOT NULL,
    dia_pago_1 integer NOT NULL,
    dia_pago_2 integer,
    created_at timestamp without time zone DEFAULT now(),
    id_descuento integer,
    id_forma_pago integer,
    id_incremento integer,
    updated_at timestamp without time zone DEFAULT now(),
    id_estado_financiacion integer DEFAULT 1,
    CONSTRAINT financiaciones_pkey PRIMARY KEY (id_financiacion)
);

CREATE TABLE IF NOT EXISTS public.forma_pago
(
    id_forma_pago integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT forma_pago_pkey PRIMARY KEY (id_forma_pago),
    CONSTRAINT forma_pago_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.formacion_adicional_docente
(
    id_formacion serial NOT NULL,
    id_contratacion_docente integer NOT NULL,
    titulo character varying(150) COLLATE pg_catalog."default" NOT NULL,
    institucion character varying(150) COLLATE pg_catalog."default",
    nivel character varying(50) COLLATE pg_catalog."default",
    fecha_obtencion date,
    ruta_certificado text COLLATE pg_catalog."default",
    CONSTRAINT formacion_adicional_docente_pkey PRIMARY KEY (id_formacion)
);

CREATE TABLE IF NOT EXISTS public.formaciones_academicas_usuario
(
    id serial NOT NULL,
    id_usuario bigint NOT NULL,
    id_nivel smallint NOT NULL,
    programa_carrera character varying(150) COLLATE pg_catalog."default",
    institucion character varying(150) COLLATE pg_catalog."default",
    fecha_registro timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT formaciones_academicas_usuario_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.grupo_conversacion
(
    id_grupo integer NOT NULL,
    id_conversacion integer NOT NULL,
    fecha_asignacion timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_grupo_conversacion PRIMARY KEY (id_grupo, id_conversacion)
);

CREATE TABLE IF NOT EXISTS public.grupo_dias
(
    id_grupo_dia serial NOT NULL,
    id_grupo integer NOT NULL,
    id_dia integer NOT NULL,
    id_salon integer,
    tipo_sesion character varying(10) COLLATE pg_catalog."default" DEFAULT 'teorica'::character varying,
    hora_inicio time without time zone,
    hora_fin time without time zone,
    CONSTRAINT grupo_dias_pkey PRIMARY KEY (id_grupo_dia)
);

CREATE TABLE IF NOT EXISTS public.grupo_sesiones
(
    id_sesion serial NOT NULL,
    id_grupo integer,
    fecha date NOT NULL,
    dia_semana character varying(20) COLLATE pg_catalog."default",
    sesion integer,
    es_festivo boolean DEFAULT false,
    omitido boolean DEFAULT false,
    tipo_sesion character varying(10) COLLATE pg_catalog."default" DEFAULT 'teorica'::character varying,
    hora_inicio time without time zone,
    hora_fin time without time zone,
    CONSTRAINT grupo_sesiones_pkey PRIMARY KEY (id_sesion)
);

CREATE TABLE IF NOT EXISTS public.grupos_academicos
(
    id_grupo serial NOT NULL,
    id_programa integer NOT NULL,
    id_modulo integer NOT NULL,
    nombre_grupo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    id_area integer NOT NULL,
    id_salon integer NOT NULL,
    hora_inicio time without time zone NOT NULL,
    hora_fin time without time zone NOT NULL,
    horas_totales integer NOT NULL,
    fecha_inicio date NOT NULL,
    fecha_fin date NOT NULL,
    estado character varying(20) COLLATE pg_catalog."default" DEFAULT 'Activo'::character varying,
    clases_totales integer,
    horas_por_sesion numeric(4, 2),
    creado timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id_contratacion_docente integer,
    CONSTRAINT grupos_academicos_pkey PRIMARY KEY (id_grupo)
);

CREATE TABLE IF NOT EXISTS public.grupos_chat
(
    id_grupo_chat integer NOT NULL DEFAULT nextval('grupos_chat_id_grupo_seq'::regclass),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    icono character varying(255) COLLATE pg_catalog."default",
    es_oficial boolean NOT NULL DEFAULT false,
    id_creador integer NOT NULL,
    fecha_creacion timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT grupos_chat_pkey PRIMARY KEY (id_grupo_chat)
);

CREATE TABLE IF NOT EXISTS public.incrementos
(
    id_incremento integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_incremento character varying(100) COLLATE pg_catalog."default" NOT NULL,
    porcentaje numeric(5, 2),
    monto numeric(10, 2),
    fecha_inicio date NOT NULL,
    fecha_fin date NOT NULL,
    estado boolean,
    created_at timestamp with time zone NOT NULL,
    id_sede integer NOT NULL,
    CONSTRAINT incrementos_pkey PRIMARY KEY (id_incremento)
);

CREATE TABLE IF NOT EXISTS public.inscripcion_academica
(
    id_inscripcion serial NOT NULL,
    id_usuario integer NOT NULL,
    id_tipo_programa integer NOT NULL,
    id_programas_academicos integer NOT NULL,
    fecha_inscripcion timestamp without time zone NOT NULL DEFAULT now(),
    estado boolean NOT NULL DEFAULT false,
    id_anio_periodo integer NOT NULL,
    CONSTRAINT inscripcion_academica_pkey PRIMARY KEY (id_inscripcion),
    CONSTRAINT unique_usuario_programa UNIQUE (id_usuario, id_programas_academicos)
);

CREATE TABLE IF NOT EXISTS public.jornadas
(
    id_jornada integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_jornada character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(250) COLLATE pg_catalog."default" NOT NULL,
    estado boolean NOT NULL,
    fecha_creacion timestamp with time zone NOT NULL,
    CONSTRAINT jornadas_pkey PRIMARY KEY (id_jornada),
    CONSTRAINT jornadas_nombre_jornada_key UNIQUE (nombre_jornada)
);

CREATE TABLE IF NOT EXISTS public.lecturas_mensaje
(
    id_lectura serial NOT NULL,
    id_mensaje integer NOT NULL,
    id_usuario integer NOT NULL,
    fecha_lectura timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT lecturas_mensaje_pkey PRIMARY KEY (id_lectura),
    CONSTRAINT unique_mensaje_usuario UNIQUE (id_mensaje, id_usuario)
);

CREATE TABLE IF NOT EXISTS public.medios_pago
(
    id_medio_pago integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    prefijo character varying(5) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT medios_pago_pkey PRIMARY KEY (id_medio_pago),
    CONSTRAINT medios_pago_nombre_key UNIQUE (nombre),
    CONSTRAINT medios_pago_prefijo_key UNIQUE (prefijo)
);

CREATE TABLE IF NOT EXISTS public.menciones_mensaje
(
    id_mencion serial NOT NULL,
    id_mensaje integer NOT NULL,
    id_usuario_mencionado integer NOT NULL,
    fecha_mencion timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    notificado boolean NOT NULL DEFAULT false,
    CONSTRAINT menciones_mensaje_pkey PRIMARY KEY (id_mencion),
    CONSTRAINT unique_mensaje_usuario_mencion UNIQUE (id_mensaje, id_usuario_mencionado)
);

CREATE TABLE IF NOT EXISTS public.mensajes
(
    id_mensaje serial NOT NULL,
    id_conversacion integer NOT NULL,
    id_remitente integer NOT NULL,
    contenido text COLLATE pg_catalog."default" NOT NULL,
    fecha_envio timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    editado boolean NOT NULL DEFAULT false,
    fecha_edicion timestamp with time zone,
    estado character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'enviado'::character varying,
    mensaje_padre integer,
    CONSTRAINT mensajes_pkey PRIMARY KEY (id_mensaje)
);

CREATE TABLE IF NOT EXISTS public.mensajes_favoritos
(
    id_favorito serial NOT NULL,
    id_mensaje integer NOT NULL,
    id_usuario integer NOT NULL,
    fecha_marcado timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    nota text COLLATE pg_catalog."default",
    CONSTRAINT mensajes_favoritos_pkey PRIMARY KEY (id_favorito),
    CONSTRAINT unique_mensaje_usuario_favorito UNIQUE (id_mensaje, id_usuario)
);

CREATE TABLE IF NOT EXISTS public.modulos
(
    id_modulo integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_modulo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    estado boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    id_sede integer NOT NULL,
    id_tipo_modulo integer,
    CONSTRAINT modulos_pkey PRIMARY KEY (id_modulo),
    CONSTRAINT unique_nombre_modulo UNIQUE (nombre_modulo),
    CONSTRAINT unique_nombre_tipo_modulo UNIQUE (nombre_modulo, id_tipo_modulo)
);

CREATE TABLE IF NOT EXISTS public.modulos_competencias
(
    id_modulo_competencia serial NOT NULL,
    id_modulo integer NOT NULL,
    id_semestre integer NOT NULL,
    intensidad_horas integer NOT NULL,
    horas_teoricas integer NOT NULL DEFAULT 0,
    horas_practicas integer NOT NULL DEFAULT 0,
    CONSTRAINT modulos_competencias_pkey PRIMARY KEY (id_modulo_competencia),
    CONSTRAINT uq_modulo_semestre UNIQUE (id_modulo, id_semestre)
);

CREATE TABLE IF NOT EXISTS public.municipios
(
    id_municipio integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    municipio character varying(100) COLLATE pg_catalog."default" NOT NULL,
    estado boolean NOT NULL,
    departamento_id integer NOT NULL,
    CONSTRAINT municipios_pkey PRIMARY KEY (id_municipio)
);

CREATE TABLE IF NOT EXISTS public.niveles_formacion
(
    id_nivel smallint NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT niveles_formacion_pkey PRIMARY KEY (id_nivel),
    CONSTRAINT niveles_formacion_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.notificaciones_chat
(
    id_notificacion serial NOT NULL,
    id_usuario integer NOT NULL,
    id_mensaje integer,
    id_conversacion integer NOT NULL,
    tipo_notificacion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    contenido text COLLATE pg_catalog."default" NOT NULL,
    leida boolean NOT NULL DEFAULT false,
    fecha_creacion timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    fecha_lectura timestamp with time zone,
    CONSTRAINT notificaciones_chat_pkey PRIMARY KEY (id_notificacion)
);

CREATE TABLE IF NOT EXISTS public.ocupaciones
(
    id_ocupacion serial NOT NULL,
    nombre_ocupacion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    CONSTRAINT ocupaciones_pkey PRIMARY KEY (id_ocupacion)
);

CREATE TABLE IF NOT EXISTS public.orden_matricula_financiera
(
    id_orden serial NOT NULL,
    id_usuario integer NOT NULL,
    id_inscripcion integer NOT NULL,
    id_tipo_matricula integer NOT NULL,
    id_semestre_pensum integer,
    id_jornada integer NOT NULL,
    id_convenio integer,
    id_tipo_ingreso integer NOT NULL,
    valor_matricula numeric(12, 2) NOT NULL,
    id_estado integer NOT NULL DEFAULT 1,
    fecha_creacion timestamp without time zone NOT NULL DEFAULT now(),
    id_pensum integer NOT NULL,
    id_anio_periodo integer NOT NULL,
    CONSTRAINT orden_matricula_financiera_pkey PRIMARY KEY (id_orden)
);

CREATE TABLE IF NOT EXISTS public.pagos
(
    id_pago integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    monto numeric(10, 2) NOT NULL,
    referencia_pago character varying(20) COLLATE pg_catalog."default" NOT NULL,
    fecha_pago timestamp with time zone NOT NULL DEFAULT now(),
    rc_numero character varying(10) COLLATE pg_catalog."default" NOT NULL,
    id_cartera integer,
    id_concepto integer,
    id_medio_pago integer NOT NULL,
    id_sede integer NOT NULL,
    id_estado_pago integer DEFAULT 1,
    id_estudiante integer,
    CONSTRAINT pagos_pkey PRIMARY KEY (id_pago),
    CONSTRAINT pagos_rc_numero_key UNIQUE (rc_numero),
    CONSTRAINT pagos_referencia_pago_key UNIQUE (referencia_pago)
);

CREATE TABLE IF NOT EXISTS public.pagos_cuotas
(
    id_pago_cuota integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_pago integer NOT NULL,
    monto_abonado numeric(10, 2) NOT NULL,
    id_cuota integer NOT NULL,
    CONSTRAINT pagos_cuotas_pkey PRIMARY KEY (id_pago_cuota)
);

CREATE TABLE IF NOT EXISTS public.paises
(
    id_pais integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT paises_pkey PRIMARY KEY (id_pais)
);

CREATE TABLE IF NOT EXISTS public.participantes_conversacion
(
    id_participante serial NOT NULL,
    id_conversacion integer NOT NULL,
    id_usuario integer NOT NULL,
    fecha_ingreso timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    estado_participacion character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'activo'::character varying,
    rol_participante character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'miembro'::character varying,
    notificaciones_activas boolean NOT NULL DEFAULT true,
    CONSTRAINT participantes_conversacion_pkey PRIMARY KEY (id_participante),
    CONSTRAINT unique_usuario_conversacion UNIQUE (id_conversacion, id_usuario)
);

CREATE TABLE IF NOT EXISTS public.pensum
(
    id_pensum serial NOT NULL,
    id_programa integer NOT NULL,
    anio_vigencia integer NOT NULL,
    activo boolean DEFAULT true,
    nombre character varying(100) COLLATE pg_catalog."default",
    id_anio integer,
    CONSTRAINT pensum_pkey PRIMARY KEY (id_pensum),
    CONSTRAINT unique_programa_anio_nombre UNIQUE (id_programa, anio_vigencia, nombre)
);

CREATE TABLE IF NOT EXISTS public.periodo
(
    id_periodo serial NOT NULL,
    codigo character(1) COLLATE pg_catalog."default",
    descripcion character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT periodo_pkey PRIMARY KEY (id_periodo),
    CONSTRAINT periodo_codigo_key UNIQUE (codigo)
);

CREATE TABLE IF NOT EXISTS public.permisos
(
    id_permiso serial NOT NULL,
    codigo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    modulo character varying(50) COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT permisos_pkey PRIMARY KEY (id_permiso),
    CONSTRAINT permisos_codigo_key UNIQUE (codigo)
);

CREATE TABLE IF NOT EXISTS public.pisos
(
    id_piso serial NOT NULL,
    nombre_piso character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pisos_pkey PRIMARY KEY (id_piso)
);

CREATE TABLE IF NOT EXISTS public.programas_academicos
(
    id_programa integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_programa character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    duracion integer NOT NULL,
    id_periodo integer NOT NULL,
    estado boolean,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    id_sede integer NOT NULL,
    id_escuelas integer,
    id_tipos_programas integer,
    codigo_centro_costo integer,
    codigo_siet character varying(50) COLLATE pg_catalog."default",
    numero_registro character varying(50) COLLATE pg_catalog."default",
    numero_certificacion character varying(50) COLLATE pg_catalog."default",
    acto_administrativo_pdf character varying(255) COLLATE pg_catalog."default",
    fecha_fin date,
    fecha_inicio date,
    CONSTRAINT programas_academicos_pkey PRIMARY KEY (id_programa)
);

CREATE TABLE IF NOT EXISTS public.reacciones_mensaje
(
    id_reaccion serial NOT NULL,
    id_mensaje integer NOT NULL,
    id_usuario integer NOT NULL,
    tipo_reaccion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    fecha_reaccion timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT reacciones_mensaje_pkey PRIMARY KEY (id_reaccion),
    CONSTRAINT unique_mensaje_usuario_reaccion UNIQUE (id_mensaje, id_usuario, tipo_reaccion)
);

CREATE TABLE IF NOT EXISTS public.riesgo_laboral
(
    id_riesgo_laboral integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nivel_riesgo character varying(20) COLLATE pg_catalog."default",
    porcentaje numeric(5, 3),
    CONSTRAINT riesgo_laboral_pkey PRIMARY KEY (id_riesgo_laboral)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id_rol integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_rol character varying(50) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id_rol),
    CONSTRAINT roles_nombre_rol_key UNIQUE (nombre_rol)
);

CREATE TABLE IF NOT EXISTS public.sedes
(
    id_sede integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_sede character varying(100) COLLATE pg_catalog."default" NOT NULL,
    direccion text COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(15) COLLATE pg_catalog."default",
    ciudad character varying(50) COLLATE pg_catalog."default" NOT NULL,
    estado boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    nit character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT sedes_pkey PRIMARY KEY (id_sede),
    CONSTRAINT unique_nit_sedes UNIQUE (nit)
);

CREATE TABLE IF NOT EXISTS public.semestres_pensum
(
    id_semestre integer NOT NULL DEFAULT nextval('semestres_id_semestre_seq'::regclass),
    id_pensum integer NOT NULL,
    numero_semestre integer NOT NULL,
    nombre_semestre character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT semestres_pkey PRIMARY KEY (id_semestre),
    CONSTRAINT unique_pensum_numero_semestre UNIQUE (id_pensum, numero_semestre)
);

CREATE TABLE IF NOT EXISTS public.semestres_programas
(
    id serial NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT semestres_programas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sesion_activa
(
    id serial NOT NULL,
    id_credencial integer NOT NULL,
    token character varying(64) COLLATE pg_catalog."default" NOT NULL,
    creado_en timestamp with time zone DEFAULT now(),
    expiracion timestamp with time zone NOT NULL,
    ip inet,
    CONSTRAINT sesion_activa_pkey PRIMARY KEY (id),
    CONSTRAINT sesion_activa_token_key UNIQUE (token),
    CONSTRAINT sesion_activa_usuario_id_key UNIQUE (id_credencial)
);

CREATE TABLE IF NOT EXISTS public.sexo
(
    id_sexo integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    sexo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT sexo_pkey PRIMARY KEY (id_sexo)
);

CREATE TABLE IF NOT EXISTS public.sisben
(
    id_sisben integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    sisben character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT sisben_pkey PRIMARY KEY (id_sisben)
);

CREATE TABLE IF NOT EXISTS public.tipo_despido
(
    id_tipo_despido integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_despido character varying(150) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_despido_pkey PRIMARY KEY (id_tipo_despido)
);

CREATE TABLE IF NOT EXISTS public.tipo_discapacidad
(
    id_tipo_discapacidad integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_discapacidad_pkey PRIMARY KEY (id_tipo_discapacidad)
);

CREATE TABLE IF NOT EXISTS public.tipo_identificacion
(
    id_tipo_identificacion integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_identificacion_pkey PRIMARY KEY (id_tipo_identificacion)
);

CREATE TABLE IF NOT EXISTS public.tipo_ingreso_estudiante
(
    id_tipo_ingreso integer NOT NULL DEFAULT nextval('tipo_ingreso_estudiante_id_seq'::regclass),
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_ingreso_estudiante_pkey PRIMARY KEY (id_tipo_ingreso)
);

CREATE TABLE IF NOT EXISTS public.tipo_matricula_financiera
(
    id_tipo_matricula serial NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_matricula_financiera_pkey PRIMARY KEY (id_tipo_matricula),
    CONSTRAINT tipo_matricula_financiera_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.tipo_sangre
(
    id_tipo_sangre integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_sangre_pkey PRIMARY KEY (id_tipo_sangre)
);

CREATE TABLE IF NOT EXISTS public.tipos_archivo_academico
(
    id_tipo_archivo smallint NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipos_archivo_academico_pkey PRIMARY KEY (id_tipo_archivo),
    CONSTRAINT tipos_archivo_academico_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.tipos_de_contrato
(
    id_tipo_contrato integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre_tipo_contrato character varying(100) COLLATE pg_catalog."default" NOT NULL,
    asigna_rol boolean NOT NULL,
    id_rol integer,
    CONSTRAINT tipos_de_contrato_pkey PRIMARY KEY (id_tipo_contrato)
);

CREATE TABLE IF NOT EXISTS public.tipos_modulo
(
    id_tipo_modulo serial NOT NULL,
    nombre_tipo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipos_modulo_pkey PRIMARY KEY (id_tipo_modulo)
);

CREATE TABLE IF NOT EXISTS public.tipos_programas
(
    id_tipos_programas serial NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default",
    estado boolean,
    CONSTRAINT tipos_programas_pkey PRIMARY KEY (id_tipos_programas)
);

CREATE TABLE IF NOT EXISTS public.ubicaciones
(
    id_ubicacion serial NOT NULL,
    id_area integer NOT NULL,
    id_piso integer NOT NULL,
    nombre_ubicacion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    aforo integer NOT NULL DEFAULT 0,
    activo boolean NOT NULL DEFAULT true,
    CONSTRAINT ubicaciones_pkey PRIMARY KEY (id_ubicacion)
);

CREATE TABLE IF NOT EXISTS public.usuario_permisos
(
    id_usuario_permiso serial NOT NULL,
    id_usuario integer NOT NULL,
    id_permiso integer NOT NULL,
    fecha_asignacion timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    asignado_por integer,
    CONSTRAINT usuario_permisos_pkey PRIMARY KEY (id_usuario_permiso),
    CONSTRAINT usuario_permisos_unique UNIQUE (id_usuario, id_permiso)
);

CREATE TABLE IF NOT EXISTS public.usuario_roles
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    fecha_asignacion timestamp with time zone NOT NULL DEFAULT now(),
    id_rol integer NOT NULL,
    id_usuario integer NOT NULL,
    CONSTRAINT usuario_roles_pkey PRIMARY KEY (id),
    CONSTRAINT usuario_roles_id_usuario_id_rol_1fc4397e_uniq UNIQUE (id_usuario, id_rol)
);

CREATE TABLE IF NOT EXISTS public.usuarios
(
    id_usuario integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    numero_documento character varying(20) COLLATE pg_catalog."default" NOT NULL,
    nombres character varying(100) COLLATE pg_catalog."default" NOT NULL,
    apellidos character varying(100) COLLATE pg_catalog."default" NOT NULL,
    fecha_nacimiento date NOT NULL,
    direccion_residencia character varying(100) COLLATE pg_catalog."default" NOT NULL,
    barrio character varying(100) COLLATE pg_catalog."default" NOT NULL,
    celular character varying(15) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(15) COLLATE pg_catalog."default" NOT NULL,
    correo_electronico character varying(150) COLLATE pg_catalog."default" NOT NULL,
    fecha_creacion timestamp with time zone NOT NULL,
    fecha_actualizacion timestamp with time zone NOT NULL,
    estado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    id_departamento_expedicion integer NOT NULL,
    id_departamento_expulsor integer,
    id_departamento_nacimiento integer NOT NULL,
    id_departamento_residencia integer NOT NULL,
    id_eps integer NOT NULL,
    id_estado_civil integer NOT NULL,
    id_estrato integer NOT NULL,
    id_etnia integer NOT NULL,
    id_municipio_expedicion integer NOT NULL,
    id_municipio_expulsor integer,
    id_municipio_nacimiento integer NOT NULL,
    id_municipio_residencia integer NOT NULL,
    id_sexo integer NOT NULL,
    id_sisben integer NOT NULL,
    id_tipo_discapacidad integer NOT NULL,
    id_tipo_identificacion integer NOT NULL,
    id_tipo_sangre integer NOT NULL,
    id_zona_residencial integer NOT NULL,
    foto_perfil character varying(100) COLLATE pg_catalog."default",
    id_pais integer,
    CONSTRAINT usuarios_pkey PRIMARY KEY (id_usuario),
    CONSTRAINT usuarios_correo_electronico_key UNIQUE (correo_electronico),
    CONSTRAINT usuarios_numero_documento_key UNIQUE (numero_documento)
);

CREATE TABLE IF NOT EXISTS public.zona_residencial
(
    id_zona_residencial integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    zona_residencial character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT zona_residencial_pkey PRIMARY KEY (id_zona_residencial)
);

ALTER TABLE IF EXISTS public.adjuntos_mensaje
    ADD CONSTRAINT fk_mensaje_adjunto FOREIGN KEY (id_mensaje)
    REFERENCES public.mensajes (id_mensaje) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.anexo_documentos
    ADD CONSTRAINT anexo_documentos_id_contratacion_359e93b4_fk_contratac FOREIGN KEY (id_contratacion)
    REFERENCES public.contrataciones (id_contratacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS anexo_documentos_id_contratacion_359e93b4
    ON public.anexo_documentos(id_contratacion);


ALTER TABLE IF EXISTS public.anexos_docente
    ADD CONSTRAINT anexos_docente_id_contratacion_docente_fkey FOREIGN KEY (id_contratacion_docente)
    REFERENCES public.contratacion_docente (id_contratacion_docente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.anio_periodo
    ADD CONSTRAINT fk_anio FOREIGN KEY (id_anio)
    REFERENCES public.anio (id_anio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.anio_periodo
    ADD CONSTRAINT fk_anio_periodo_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.anio_periodo
    ADD CONSTRAINT fk_periodo FOREIGN KEY (id_periodo)
    REFERENCES public.periodo (id_periodo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e
    ON public.auth_group_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_group_id_b120cbf9
    ON public.auth_group_permissions(group_id);


ALTER TABLE IF EXISTS public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_permission_content_type_id_2f476e4b
    ON public.auth_permission(content_type_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_group_id_97559544
    ON public.auth_user_groups(group_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_user_id_6a12ed8b
    ON public.auth_user_groups(user_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_permission_id_1fbb5f2c
    ON public.auth_user_user_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_user_id_a95ead1b
    ON public.auth_user_user_permissions(user_id);


ALTER TABLE IF EXISTS public.cargo
    ADD CONSTRAINT cargo_id_departamento_a0f940c9_fk_departame FOREIGN KEY (id_departamento)
    REFERENCES public.departamento_laboral (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS cargo_id_departamento_a0f940c9
    ON public.cargo(id_departamento);


ALTER TABLE IF EXISTS public.cargo
    ADD CONSTRAINT fk_cargo_id_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cartera
    ADD CONSTRAINT fk_cartera_concepto FOREIGN KEY (id_concepto)
    REFERENCES public.conceptos_pago (id_concepto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cartera
    ADD CONSTRAINT fk_estado_cartera FOREIGN KEY (id_estado_cartera)
    REFERENCES public.estado_cartera (id_estado_cartera) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cartera
    ADD CONSTRAINT fk_estudiante_cartera FOREIGN KEY (id_estudiante)
    REFERENCES public.estudiantes (id_estudiante) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cartera
    ADD CONSTRAINT fk_financiacion_cartera FOREIGN KEY (id_financiacion)
    REFERENCES public.financiaciones (id_financiacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS cartera_id_financiacion_872688e2
    ON public.cartera(id_financiacion);


ALTER TABLE IF EXISTS public.conciliaciones
    ADD CONSTRAINT conciliaciones_id_pago_b45513c7_fk_pagos_id_pago FOREIGN KEY (id_pago)
    REFERENCES public.pagos (id_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS conciliaciones_id_pago_b45513c7
    ON public.conciliaciones(id_pago);


ALTER TABLE IF EXISTS public.conciliaciones
    ADD CONSTRAINT fk_conciliaciones_pagos FOREIGN KEY (id_pago)
    REFERENCES public.pagos (id_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS conciliaciones_id_pago_b45513c7
    ON public.conciliaciones(id_pago);


ALTER TABLE IF EXISTS public.conciliaciones
    ADD CONSTRAINT fk_pago_conciliacion FOREIGN KEY (id_pago)
    REFERENCES public.pagos (id_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS conciliaciones_id_pago_b45513c7
    ON public.conciliaciones(id_pago);


ALTER TABLE IF EXISTS public.contratacion_docente
    ADD CONSTRAINT contratacion_docente_id_banco_fkey FOREIGN KEY (id_banco)
    REFERENCES public.bancos (id_banco) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contratacion_docente
    ADD CONSTRAINT contratacion_docente_id_sede_fkey FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contratacion_docente
    ADD CONSTRAINT contratacion_docente_id_tipo_contrato_fkey FOREIGN KEY (id_tipo_contrato)
    REFERENCES public.tipos_de_contrato (id_tipo_contrato) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contratacion_docente
    ADD CONSTRAINT id_contratacion_docente_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contratacion_docente_escuelas
    ADD CONSTRAINT contratacion_docente_escuelas_id_contratacion_docente_fkey FOREIGN KEY (id_contratacion_docente)
    REFERENCES public.contratacion_docente (id_contratacion_docente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.contratacion_docente_escuelas
    ADD CONSTRAINT contratacion_docente_escuelas_id_escuela_fkey FOREIGN KEY (id_escuela)
    REFERENCES public.escuelas (id_escuelas) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contratacion_id_administradoras_pensiones_fkey FOREIGN KEY (id_administradoras_pensiones)
    REFERENCES public.administradoras_pensiones (id_administradoras_pensiones) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS contrataciones_id_administradoras_pensiones_fcaf794a
    ON public.contrataciones(id_administradoras_pensiones);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contratacion_id_arl_fkey FOREIGN KEY (id_arl)
    REFERENCES public.arl (id_arl) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS contrataciones_id_arl_3d76f47f
    ON public.contrataciones(id_arl);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contratacion_id_banco_fkey FOREIGN KEY (id_banco)
    REFERENCES public.bancos (id_banco) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS contrataciones_id_banco_92ac2aed
    ON public.contrataciones(id_banco);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contratacion_id_caja_compensacion_fkey FOREIGN KEY (id_caja_compensacion)
    REFERENCES public.cajas_compensacion (id_caja_compensacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS contrataciones_id_caja_compensacion_7bb8282b
    ON public.contrataciones(id_caja_compensacion);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contratacion_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS contrataciones_id_usuario_f717e26e
    ON public.contrataciones(id_usuario);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_administradoras_p_fcaf794a_fk_administr FOREIGN KEY (id_administradoras_pensiones)
    REFERENCES public.administradoras_pensiones (id_administradoras_pensiones) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_administradoras_pensiones_fcaf794a
    ON public.contrataciones(id_administradoras_pensiones);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_arl_3d76f47f_fk_arl_id_arl FOREIGN KEY (id_arl)
    REFERENCES public.arl (id_arl) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_arl_3d76f47f
    ON public.contrataciones(id_arl);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_banco_92ac2aed_fk_bancos_id_banco FOREIGN KEY (id_banco)
    REFERENCES public.bancos (id_banco) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_banco_92ac2aed
    ON public.contrataciones(id_banco);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_caja_compensacion_7bb8282b_fk_cajas_com FOREIGN KEY (id_caja_compensacion)
    REFERENCES public.cajas_compensacion (id_caja_compensacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_caja_compensacion_7bb8282b
    ON public.contrataciones(id_caja_compensacion);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_cargo_369e6e7b_fk_cargo_id_cargo FOREIGN KEY (id_cargo)
    REFERENCES public.cargo (id_cargo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_cargo_369e6e7b
    ON public.contrataciones(id_cargo);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_departamento_1acfe7ac_fk_departame FOREIGN KEY (id_departamento)
    REFERENCES public.departamento_laboral (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_departamento_1acfe7ac
    ON public.contrataciones(id_departamento);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_riesgo_laboral_id_0173085c_fk_riesgo_la FOREIGN KEY (id_riesgo_laboral_id)
    REFERENCES public.riesgo_laboral (id_riesgo_laboral) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_riesgo_laboral_id_0173085c
    ON public.contrataciones(id_riesgo_laboral_id);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_tipo_contrato_a127e109_fk_tipos_de_ FOREIGN KEY (id_tipo_contrato)
    REFERENCES public.tipos_de_contrato (id_tipo_contrato) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_tipo_contrato_a127e109
    ON public.contrataciones(id_tipo_contrato);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT contrataciones_id_usuario_f717e26e_fk_usuarios_id_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrataciones_id_usuario_f717e26e
    ON public.contrataciones(id_usuario);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT fk_cargo FOREIGN KEY (id_cargo)
    REFERENCES public.cargo (id_cargo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS contrataciones_id_cargo_369e6e7b
    ON public.contrataciones(id_cargo);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT fk_contrataciones_id_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT fk_departamento_laboral FOREIGN KEY (id_departamento)
    REFERENCES public.departamento_laboral (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS contrataciones_id_departamento_1acfe7ac
    ON public.contrataciones(id_departamento);


ALTER TABLE IF EXISTS public.contrataciones
    ADD CONSTRAINT fk_tipo_contrato FOREIGN KEY (id_tipo_contrato)
    REFERENCES public.tipos_de_contrato (id_tipo_contrato) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS contrataciones_id_tipo_contrato_a127e109
    ON public.contrataciones(id_tipo_contrato);


ALTER TABLE IF EXISTS public.contrato_fin
    ADD CONSTRAINT contrato_fin_id_contratacion_0975551c_fk_contratac FOREIGN KEY (id_contratacion)
    REFERENCES public.contrataciones (id_contratacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrato_fin_id_contratacion_0975551c
    ON public.contrato_fin(id_contratacion);


ALTER TABLE IF EXISTS public.contrato_fin
    ADD CONSTRAINT contrato_fin_id_tipo_despido_a5dde534_fk_tipo_desp FOREIGN KEY (id_tipo_despido)
    REFERENCES public.tipo_despido (id_tipo_despido) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS contrato_fin_id_tipo_despido_a5dde534
    ON public.contrato_fin(id_tipo_despido);


ALTER TABLE IF EXISTS public.contrato_fin_docente
    ADD CONSTRAINT fk_contrato_fin_docente_contratacion FOREIGN KEY (id_contratacion_docente)
    REFERENCES public.contratacion_docente (id_contratacion_docente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.contrato_fin_docente
    ADD CONSTRAINT fk_contrato_fin_docente_tipo_despido FOREIGN KEY (id_tipo_despido)
    REFERENCES public.tipo_despido (id_tipo_despido) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.convenios
    ADD CONSTRAINT fk_convenios_id_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.conversaciones
    ADD CONSTRAINT fk_creador_conversacion FOREIGN KEY (id_creador)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.costo_semestre_pensum
    ADD CONSTRAINT fk_pensum_costo FOREIGN KEY (id_pensum)
    REFERENCES public.pensum (id_pensum) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.costo_total
    ADD CONSTRAINT fk_pensum FOREIGN KEY (id_pensum)
    REFERENCES public.pensum (id_pensum) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.costos_hora_escuela_tipo_programa
    ADD CONSTRAINT fk_anio FOREIGN KEY (id_anio)
    REFERENCES public.anio (id_anio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.costos_hora_escuela_tipo_programa
    ADD CONSTRAINT fk_escuela FOREIGN KEY (id_escuela)
    REFERENCES public.escuelas (id_escuelas) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.costos_hora_escuela_tipo_programa
    ADD CONSTRAINT fk_tipo_programa FOREIGN KEY (id_tipo_programa)
    REFERENCES public.tipos_programas (id_tipos_programas) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.credenciales
    ADD CONSTRAINT credenciales_id_usuario_cdd09c21_fk_usuarios_id_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS credenciales_id_usuario_cdd09c21
    ON public.credenciales(id_usuario);


ALTER TABLE IF EXISTS public.credenciales
    ADD CONSTRAINT credenciales_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS credenciales_id_usuario_cdd09c21
    ON public.credenciales(id_usuario);


ALTER TABLE IF EXISTS public.cuotas
    ADD CONSTRAINT fk_cartera_cuota FOREIGN KEY (id_cartera)
    REFERENCES public.cartera (id_cartera) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cuotas
    ADD CONSTRAINT fk_estado_cuota FOREIGN KEY (id_estado_cuota)
    REFERENCES public.estado_cuota (id_estado_cuota) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.datos_adicionales_usuarios
    ADD CONSTRAINT fk_ocupacion FOREIGN KEY (id_ocupacion)
    REFERENCES public.ocupaciones (id_ocupacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.datos_adicionales_usuarios
    ADD CONSTRAINT fk_tipo_archivo FOREIGN KEY (id_tipo_archivo)
    REFERENCES public.tipos_archivo_academico (id_tipo_archivo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.datos_adicionales_usuarios
    ADD CONSTRAINT fk_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.departamento_laboral
    ADD CONSTRAINT fk_departamento_lab_id_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.descuentos
    ADD CONSTRAINT descuentos_id_sede_94320ddb_fk_sedes_id_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS descuentos_id_sede_94320ddb
    ON public.descuentos(id_sede);


ALTER TABLE IF EXISTS public.descuentos
    ADD CONSTRAINT descuentos_id_sede_fkey FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS descuentos_id_sede_94320ddb
    ON public.descuentos(id_sede);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb
    ON public.django_admin_log(content_type_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_user_id_c564eba6
    ON public.django_admin_log(user_id);


ALTER TABLE IF EXISTS public.escuelas
    ADD CONSTRAINT escuelas_id_sede_fkey FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.escuelas
    ADD CONSTRAINT fk_escuelas_sedes FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.estudiantes
    ADD CONSTRAINT fk_estado_estudiante FOREIGN KEY (id_estado_estudiante)
    REFERENCES public.estado_estudiante (id_estado_estudiante) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.estudiantes
    ADD CONSTRAINT fk_estudiantes_anio_periodo FOREIGN KEY (id_anio_periodo)
    REFERENCES public.anio_periodo (id_anio_periodo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.estudiantes
    ADD CONSTRAINT fk_periodo_estudiante FOREIGN KEY (id_anio_periodo)
    REFERENCES public.anio_periodo (id_anio_periodo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.estudiantes
    ADD CONSTRAINT fk_sede_estudiantes FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.estudiantes
    ADD CONSTRAINT fk_usuario_estudiante FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS unique_estudiante_usuario
    ON public.estudiantes(id_usuario);


ALTER TABLE IF EXISTS public.financiaciones
    ADD CONSTRAINT fk_descuento FOREIGN KEY (id_descuento)
    REFERENCES public.descuentos (id_descuento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.financiaciones
    ADD CONSTRAINT fk_estado_financiacion FOREIGN KEY (id_estado_financiacion)
    REFERENCES public.estado_financiacion (id_estado_financiacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.financiaciones
    ADD CONSTRAINT fk_estudiante_financiacion FOREIGN KEY (id_estudiante)
    REFERENCES public.estudiantes (id_estudiante) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.financiaciones
    ADD CONSTRAINT fk_forma_pago FOREIGN KEY (id_forma_pago)
    REFERENCES public.forma_pago (id_forma_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.financiaciones
    ADD CONSTRAINT fk_incremento FOREIGN KEY (id_incremento)
    REFERENCES public.incrementos (id_incremento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.financiaciones
    ADD CONSTRAINT fk_orden_matricula FOREIGN KEY (id_orden)
    REFERENCES public.orden_matricula_financiera (id_orden) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.formacion_adicional_docente
    ADD CONSTRAINT formacion_adicional_docente_id_contratacion_docente_fkey FOREIGN KEY (id_contratacion_docente)
    REFERENCES public.contratacion_docente (id_contratacion_docente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.formaciones_academicas_usuario
    ADD CONSTRAINT fk_nivel FOREIGN KEY (id_nivel)
    REFERENCES public.niveles_formacion (id_nivel) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.formaciones_academicas_usuario
    ADD CONSTRAINT fk_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.grupo_conversacion
    ADD CONSTRAINT fk_conversacion_grupo FOREIGN KEY (id_conversacion)
    REFERENCES public.conversaciones (id_conversacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.grupo_conversacion
    ADD CONSTRAINT fk_grupo FOREIGN KEY (id_grupo)
    REFERENCES public.grupos_chat (id_grupo_chat) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.grupo_dias
    ADD CONSTRAINT fk_grupo_dias_salon FOREIGN KEY (id_salon)
    REFERENCES public.ubicaciones (id_ubicacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.grupo_dias
    ADD CONSTRAINT grupo_dias_id_dia_fkey FOREIGN KEY (id_dia)
    REFERENCES public.dias (id_dia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.grupo_dias
    ADD CONSTRAINT grupo_dias_id_grupo_fkey FOREIGN KEY (id_grupo)
    REFERENCES public.grupos_academicos (id_grupo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.grupo_sesiones
    ADD CONSTRAINT grupo_sesiones_id_grupo_fkey FOREIGN KEY (id_grupo)
    REFERENCES public.grupos_academicos (id_grupo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.grupos_academicos
    ADD CONSTRAINT grupos_academicos_id_area_fkey FOREIGN KEY (id_area)
    REFERENCES public.areas (id_area) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.grupos_academicos
    ADD CONSTRAINT grupos_academicos_id_contratacion_docente_fkey FOREIGN KEY (id_contratacion_docente)
    REFERENCES public.contratacion_docente (id_contratacion_docente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.grupos_academicos
    ADD CONSTRAINT grupos_academicos_id_modulo_fkey FOREIGN KEY (id_modulo)
    REFERENCES public.modulos (id_modulo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.grupos_academicos
    ADD CONSTRAINT grupos_academicos_id_programa_fkey FOREIGN KEY (id_programa)
    REFERENCES public.programas_academicos (id_programa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.grupos_academicos
    ADD CONSTRAINT grupos_academicos_id_salon_fkey FOREIGN KEY (id_salon)
    REFERENCES public.ubicaciones (id_ubicacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.grupos_chat
    ADD CONSTRAINT fk_creador_grupo FOREIGN KEY (id_creador)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.incrementos
    ADD CONSTRAINT incrementos_id_sede_a073177b_fk_sedes_id_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS incrementos_id_sede_a073177b
    ON public.incrementos(id_sede);


ALTER TABLE IF EXISTS public.incrementos
    ADD CONSTRAINT incrementos_id_sede_fkey FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS incrementos_id_sede_a073177b
    ON public.incrementos(id_sede);


ALTER TABLE IF EXISTS public.inscripcion_academica
    ADD CONSTRAINT fk_inscripcion_anio_periodo FOREIGN KEY (id_anio_periodo)
    REFERENCES public.anio_periodo (id_anio_periodo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inscripcion_academica
    ADD CONSTRAINT fk_periodo_inscripcion FOREIGN KEY (id_anio_periodo)
    REFERENCES public.anio_periodo (id_anio_periodo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inscripcion_academica
    ADD CONSTRAINT fk_programa_academico FOREIGN KEY (id_programas_academicos)
    REFERENCES public.programas_academicos (id_programa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inscripcion_academica
    ADD CONSTRAINT fk_tipo_programa FOREIGN KEY (id_tipo_programa)
    REFERENCES public.tipos_programas (id_tipos_programas) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inscripcion_academica
    ADD CONSTRAINT fk_usuario_inscripcion FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lecturas_mensaje
    ADD CONSTRAINT fk_mensaje_lectura FOREIGN KEY (id_mensaje)
    REFERENCES public.mensajes (id_mensaje) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lecturas_mensaje
    ADD CONSTRAINT fk_usuario_lectura FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.menciones_mensaje
    ADD CONSTRAINT fk_mensaje_mencion FOREIGN KEY (id_mensaje)
    REFERENCES public.mensajes (id_mensaje) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.menciones_mensaje
    ADD CONSTRAINT fk_usuario_mencionado FOREIGN KEY (id_usuario_mencionado)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.mensajes
    ADD CONSTRAINT fk_conversacion_mensaje FOREIGN KEY (id_conversacion)
    REFERENCES public.conversaciones (id_conversacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_mensajes_conversacion
    ON public.mensajes(id_conversacion);


ALTER TABLE IF EXISTS public.mensajes
    ADD CONSTRAINT fk_mensaje_padre FOREIGN KEY (mensaje_padre)
    REFERENCES public.mensajes (id_mensaje) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.mensajes
    ADD CONSTRAINT fk_remitente_mensaje FOREIGN KEY (id_remitente)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_mensajes_remitente
    ON public.mensajes(id_remitente);


ALTER TABLE IF EXISTS public.mensajes_favoritos
    ADD CONSTRAINT fk_mensaje_favorito FOREIGN KEY (id_mensaje)
    REFERENCES public.mensajes (id_mensaje) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.mensajes_favoritos
    ADD CONSTRAINT fk_usuario_favorito FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.modulos
    ADD CONSTRAINT fk_tipo_modulo FOREIGN KEY (id_tipo_modulo)
    REFERENCES public.tipos_modulo (id_tipo_modulo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.modulos
    ADD CONSTRAINT modulos_id_sede_8b716777_fk_sedes_id_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS modulos_id_sede_8b716777
    ON public.modulos(id_sede);


ALTER TABLE IF EXISTS public.modulos
    ADD CONSTRAINT modulos_id_sede_fkey FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS modulos_id_sede_8b716777
    ON public.modulos(id_sede);


ALTER TABLE IF EXISTS public.modulos_competencias
    ADD CONSTRAINT modulos_competencias_id_modulo_fkey FOREIGN KEY (id_modulo)
    REFERENCES public.modulos (id_modulo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.modulos_competencias
    ADD CONSTRAINT modulos_competencias_id_semestre_fkey FOREIGN KEY (id_semestre)
    REFERENCES public.semestres_pensum (id_semestre) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.municipios
    ADD CONSTRAINT municipios_departamento_id_93acf47d_fk_departame FOREIGN KEY (departamento_id)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS municipios_departamento_id_93acf47d
    ON public.municipios(departamento_id);


ALTER TABLE IF EXISTS public.notificaciones_chat
    ADD CONSTRAINT fk_conversacion_notificacion FOREIGN KEY (id_conversacion)
    REFERENCES public.conversaciones (id_conversacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.notificaciones_chat
    ADD CONSTRAINT fk_mensaje_notificacion FOREIGN KEY (id_mensaje)
    REFERENCES public.mensajes (id_mensaje) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.notificaciones_chat
    ADD CONSTRAINT fk_usuario_notificacion FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_notificaciones_usuario
    ON public.notificaciones_chat(id_usuario);


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_convenio FOREIGN KEY (id_convenio)
    REFERENCES public.convenios (id_convenio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_estado_matricula FOREIGN KEY (id_estado)
    REFERENCES public.estado_matricula_financiera (id_estado) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_inscripcion_orden FOREIGN KEY (id_inscripcion)
    REFERENCES public.inscripcion_academica (id_inscripcion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_jornada FOREIGN KEY (id_jornada)
    REFERENCES public.jornadas (id_jornada) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_orden_anio_periodo FOREIGN KEY (id_anio_periodo)
    REFERENCES public.anio_periodo (id_anio_periodo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_pensum_orden FOREIGN KEY (id_pensum)
    REFERENCES public.pensum (id_pensum) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_periodo_orden FOREIGN KEY (id_anio_periodo)
    REFERENCES public.anio_periodo (id_anio_periodo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_semestre_pensum FOREIGN KEY (id_semestre_pensum)
    REFERENCES public.semestres_pensum (id_semestre) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_tipo_ingreso FOREIGN KEY (id_tipo_ingreso)
    REFERENCES public.tipo_ingreso_estudiante (id_tipo_ingreso) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_tipo_matricula FOREIGN KEY (id_tipo_matricula)
    REFERENCES public.tipo_matricula_financiera (id_tipo_matricula) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orden_matricula_financiera
    ADD CONSTRAINT fk_usuario_orden FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT fk_estado_pago FOREIGN KEY (id_estado_pago)
    REFERENCES public.estado_pago (id_estado_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT fk_estudiante_pago FOREIGN KEY (id_estudiante)
    REFERENCES public.estudiantes (id_estudiante) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT fk_pagos_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT pagos_id_cartera_b02e7c3d_fk_cartera_id_cartera FOREIGN KEY (id_cartera)
    REFERENCES public.cartera (id_cartera) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS pagos_id_cartera_b02e7c3d
    ON public.pagos(id_cartera);


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT pagos_id_cartera_fkey FOREIGN KEY (id_cartera)
    REFERENCES public.cartera (id_cartera) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS pagos_id_cartera_b02e7c3d
    ON public.pagos(id_cartera);


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT pagos_id_concepto_ba7a0272_fk_conceptos_pago_id_concepto FOREIGN KEY (id_concepto)
    REFERENCES public.conceptos_pago (id_concepto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS pagos_id_concepto_ba7a0272
    ON public.pagos(id_concepto);


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT pagos_id_concepto_fkey FOREIGN KEY (id_concepto)
    REFERENCES public.conceptos_pago (id_concepto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS pagos_id_concepto_ba7a0272
    ON public.pagos(id_concepto);


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT pagos_id_medio_pago_09c8eade_fk_medios_pago_id_medio_pago FOREIGN KEY (id_medio_pago)
    REFERENCES public.medios_pago (id_medio_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS pagos_id_medio_pago_09c8eade
    ON public.pagos(id_medio_pago);


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT pagos_id_medio_pago_fkey FOREIGN KEY (id_medio_pago)
    REFERENCES public.medios_pago (id_medio_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS pagos_id_medio_pago_09c8eade
    ON public.pagos(id_medio_pago);


ALTER TABLE IF EXISTS public.pagos_cuotas
    ADD CONSTRAINT fk_pago FOREIGN KEY (id_pago)
    REFERENCES public.pagos (id_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.pagos_cuotas
    ADD CONSTRAINT pagos_cuotas_id_cuota_22b3fbae_fk_cuotas_id_cuota FOREIGN KEY (id_cuota)
    REFERENCES public.cuotas (id_cuota) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS pagos_cuotas_id_cuota_22b3fbae
    ON public.pagos_cuotas(id_cuota);


ALTER TABLE IF EXISTS public.pagos_cuotas
    ADD CONSTRAINT pagos_cuotas_id_cuota_fkey FOREIGN KEY (id_cuota)
    REFERENCES public.cuotas (id_cuota) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS pagos_cuotas_id_cuota_22b3fbae
    ON public.pagos_cuotas(id_cuota);


ALTER TABLE IF EXISTS public.participantes_conversacion
    ADD CONSTRAINT fk_conversacion_participante FOREIGN KEY (id_conversacion)
    REFERENCES public.conversaciones (id_conversacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_participantes_conversacion
    ON public.participantes_conversacion(id_conversacion);


ALTER TABLE IF EXISTS public.participantes_conversacion
    ADD CONSTRAINT fk_usuario_participante FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_participantes_usuario
    ON public.participantes_conversacion(id_usuario);


ALTER TABLE IF EXISTS public.pensum
    ADD CONSTRAINT pensum_id_programa_fkey FOREIGN KEY (id_programa)
    REFERENCES public.programas_academicos (id_programa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.programas_academicos
    ADD CONSTRAINT fk_programas_academicos_escuelas FOREIGN KEY (id_escuelas)
    REFERENCES public.escuelas (id_escuelas) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.programas_academicos
    ADD CONSTRAINT fk_programas_academicos_tipos_programas FOREIGN KEY (id_tipos_programas)
    REFERENCES public.tipos_programas (id_tipos_programas) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.programas_academicos
    ADD CONSTRAINT fk_programas_escuelas FOREIGN KEY (id_escuelas)
    REFERENCES public.escuelas (id_escuelas) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.programas_academicos
    ADD CONSTRAINT fk_programas_tipos FOREIGN KEY (id_tipos_programas)
    REFERENCES public.tipos_programas (id_tipos_programas) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.programas_academicos
    ADD CONSTRAINT programas_academicos_id_sede_9b9a8dfe_fk_sedes_id_sede FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS programas_academicos_id_sede_9b9a8dfe
    ON public.programas_academicos(id_sede);


ALTER TABLE IF EXISTS public.programas_academicos
    ADD CONSTRAINT programas_academicos_id_sede_fkey FOREIGN KEY (id_sede)
    REFERENCES public.sedes (id_sede) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS programas_academicos_id_sede_9b9a8dfe
    ON public.programas_academicos(id_sede);


ALTER TABLE IF EXISTS public.reacciones_mensaje
    ADD CONSTRAINT fk_mensaje_reaccion FOREIGN KEY (id_mensaje)
    REFERENCES public.mensajes (id_mensaje) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.reacciones_mensaje
    ADD CONSTRAINT fk_usuario_reaccion FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.semestres_pensum
    ADD CONSTRAINT semestres_id_pensum_fkey FOREIGN KEY (id_pensum)
    REFERENCES public.pensum (id_pensum) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sesion_activa
    ADD CONSTRAINT sesion_activa_usuario_id_fkey FOREIGN KEY (id_credencial)
    REFERENCES public.credenciales (id_credencial) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS sesion_activa_usuario_id_key
    ON public.sesion_activa(id_credencial);


ALTER TABLE IF EXISTS public.tipos_de_contrato
    ADD CONSTRAINT tipos_de_contrato_id_rol_28e75722_fk_roles_id_rol FOREIGN KEY (id_rol)
    REFERENCES public.roles (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS tipos_de_contrato_id_rol_28e75722
    ON public.tipos_de_contrato(id_rol);


ALTER TABLE IF EXISTS public.tipos_de_contrato
    ADD CONSTRAINT tipos_de_contrato_id_rol_fkey FOREIGN KEY (id_rol)
    REFERENCES public.roles (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS tipos_de_contrato_id_rol_28e75722
    ON public.tipos_de_contrato(id_rol);


ALTER TABLE IF EXISTS public.ubicaciones
    ADD CONSTRAINT ubicaciones_id_area_fkey FOREIGN KEY (id_area)
    REFERENCES public.areas (id_area) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ubicaciones
    ADD CONSTRAINT ubicaciones_id_piso_fkey FOREIGN KEY (id_piso)
    REFERENCES public.pisos (id_piso) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario_permisos
    ADD CONSTRAINT usuario_permisos_asignado_por_fkey FOREIGN KEY (asignado_por)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario_permisos
    ADD CONSTRAINT usuario_permisos_id_permiso_fkey FOREIGN KEY (id_permiso)
    REFERENCES public.permisos (id_permiso) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_permisos
    ADD CONSTRAINT usuario_permisos_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_roles
    ADD CONSTRAINT usuario_roles_id_rol_77932ceb_fk_roles_id_rol FOREIGN KEY (id_rol)
    REFERENCES public.roles (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuario_roles_id_rol_77932ceb
    ON public.usuario_roles(id_rol);


ALTER TABLE IF EXISTS public.usuario_roles
    ADD CONSTRAINT usuario_roles_id_rol_fkey FOREIGN KEY (id_rol)
    REFERENCES public.roles (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS usuario_roles_id_rol_77932ceb
    ON public.usuario_roles(id_rol);


ALTER TABLE IF EXISTS public.usuario_roles
    ADD CONSTRAINT usuario_roles_id_usuario_ac8f1ff6_fk_usuarios_id_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuario_roles_id_usuario_ac8f1ff6
    ON public.usuario_roles(id_usuario);


ALTER TABLE IF EXISTS public.usuario_roles
    ADD CONSTRAINT usuario_roles_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES public.usuarios (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS usuario_roles_id_usuario_ac8f1ff6
    ON public.usuario_roles(id_usuario);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_departamento_expedicion FOREIGN KEY (id_departamento_expedicion)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_departamento_expedicion_1f345cc9
    ON public.usuarios(id_departamento_expedicion);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_departamento_expulsor FOREIGN KEY (id_departamento_expulsor)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_departamento_expulsor_4d3c0ea6
    ON public.usuarios(id_departamento_expulsor);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_departamento_nacimiento FOREIGN KEY (id_departamento_nacimiento)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_departamento_nacimiento_9ccd60a3
    ON public.usuarios(id_departamento_nacimiento);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_departamento_residencia FOREIGN KEY (id_departamento_residencia)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_departamento_residencia_f4895556
    ON public.usuarios(id_departamento_residencia);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_municipio_expedicion FOREIGN KEY (id_municipio_expedicion)
    REFERENCES public.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_municipio_expedicion_316a6b02
    ON public.usuarios(id_municipio_expedicion);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_municipio_expulsor FOREIGN KEY (id_municipio_expulsor)
    REFERENCES public.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_municipio_expulsor_ca693701
    ON public.usuarios(id_municipio_expulsor);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_municipio_nacimiento FOREIGN KEY (id_municipio_nacimiento)
    REFERENCES public.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_municipio_nacimiento_44e1c34a
    ON public.usuarios(id_municipio_nacimiento);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_municipio_residencia FOREIGN KEY (id_municipio_residencia)
    REFERENCES public.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_municipio_residencia_667b79d3
    ON public.usuarios(id_municipio_residencia);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT fk_tipo_sangre FOREIGN KEY (id_tipo_sangre)
    REFERENCES public.tipo_sangre (id_tipo_sangre) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS usuarios_id_tipo_sangre_1d4491ee
    ON public.usuarios(id_tipo_sangre);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_departamento_expe_1f345cc9_fk_departame FOREIGN KEY (id_departamento_expedicion)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_departamento_expedicion_1f345cc9
    ON public.usuarios(id_departamento_expedicion);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_departamento_expu_4d3c0ea6_fk_departame FOREIGN KEY (id_departamento_expulsor)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_departamento_expulsor_4d3c0ea6
    ON public.usuarios(id_departamento_expulsor);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_departamento_naci_9ccd60a3_fk_departame FOREIGN KEY (id_departamento_nacimiento)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_departamento_nacimiento_9ccd60a3
    ON public.usuarios(id_departamento_nacimiento);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_departamento_resi_f4895556_fk_departame FOREIGN KEY (id_departamento_residencia)
    REFERENCES public.departamentos (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_departamento_residencia_f4895556
    ON public.usuarios(id_departamento_residencia);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_eps_9f05c3ae_fk_eps_id_eps FOREIGN KEY (id_eps)
    REFERENCES public.eps (id_eps) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_eps_9f05c3ae
    ON public.usuarios(id_eps);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_eps_fkey FOREIGN KEY (id_eps)
    REFERENCES public.eps (id_eps) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_eps_9f05c3ae
    ON public.usuarios(id_eps);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_estado_civil_f265fd17_fk_estado_ci FOREIGN KEY (id_estado_civil)
    REFERENCES public.estado_civil (id_estado_civil) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_estado_civil_f265fd17
    ON public.usuarios(id_estado_civil);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_estado_civil_fkey FOREIGN KEY (id_estado_civil)
    REFERENCES public.estado_civil (id_estado_civil) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_estado_civil_f265fd17
    ON public.usuarios(id_estado_civil);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_estrato_9f36fa3a_fk_estrato_s FOREIGN KEY (id_estrato)
    REFERENCES public.estrato_socioeconomico (id_estrato) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_estrato_9f36fa3a
    ON public.usuarios(id_estrato);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_estrato_fkey FOREIGN KEY (id_estrato)
    REFERENCES public.estrato_socioeconomico (id_estrato) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_estrato_9f36fa3a
    ON public.usuarios(id_estrato);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_etnia_95678eba_fk_etnia_id_etnia FOREIGN KEY (id_etnia)
    REFERENCES public.etnia (id_etnia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_etnia_95678eba
    ON public.usuarios(id_etnia);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_etnia_fkey FOREIGN KEY (id_etnia)
    REFERENCES public.etnia (id_etnia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_etnia_95678eba
    ON public.usuarios(id_etnia);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_municipio_expedic_316a6b02_fk_municipio FOREIGN KEY (id_municipio_expedicion)
    REFERENCES public.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_municipio_expedicion_316a6b02
    ON public.usuarios(id_municipio_expedicion);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_municipio_expulso_ca693701_fk_municipio FOREIGN KEY (id_municipio_expulsor)
    REFERENCES public.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_municipio_expulsor_ca693701
    ON public.usuarios(id_municipio_expulsor);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_municipio_nacimie_44e1c34a_fk_municipio FOREIGN KEY (id_municipio_nacimiento)
    REFERENCES public.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_municipio_nacimiento_44e1c34a
    ON public.usuarios(id_municipio_nacimiento);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_municipio_residen_667b79d3_fk_municipio FOREIGN KEY (id_municipio_residencia)
    REFERENCES public.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_municipio_residencia_667b79d3
    ON public.usuarios(id_municipio_residencia);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_pais_b4ac1a3a_fk_paises_id_pais FOREIGN KEY (id_pais)
    REFERENCES public.paises (id_pais) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_pais_b4ac1a3a
    ON public.usuarios(id_pais);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_sexo_880b1f08_fk_sexo_id_sexo FOREIGN KEY (id_sexo)
    REFERENCES public.sexo (id_sexo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_sexo_880b1f08
    ON public.usuarios(id_sexo);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_sexo_fkey FOREIGN KEY (id_sexo)
    REFERENCES public.sexo (id_sexo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_sexo_880b1f08
    ON public.usuarios(id_sexo);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_sisben_05ac966d_fk_sisben_id_sisben FOREIGN KEY (id_sisben)
    REFERENCES public.sisben (id_sisben) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_sisben_05ac966d
    ON public.usuarios(id_sisben);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_sisben_fkey FOREIGN KEY (id_sisben)
    REFERENCES public.sisben (id_sisben) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_sisben_05ac966d
    ON public.usuarios(id_sisben);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_tipo_discapacidad_4515c2c8_fk_tipo_disc FOREIGN KEY (id_tipo_discapacidad)
    REFERENCES public.tipo_discapacidad (id_tipo_discapacidad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_tipo_discapacidad_4515c2c8
    ON public.usuarios(id_tipo_discapacidad);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_tipo_discapacidad_fkey FOREIGN KEY (id_tipo_discapacidad)
    REFERENCES public.tipo_discapacidad (id_tipo_discapacidad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_tipo_discapacidad_4515c2c8
    ON public.usuarios(id_tipo_discapacidad);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_tipo_identificaci_5420b826_fk_tipo_iden FOREIGN KEY (id_tipo_identificacion)
    REFERENCES public.tipo_identificacion (id_tipo_identificacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_tipo_identificacion_5420b826
    ON public.usuarios(id_tipo_identificacion);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_tipo_identificacion_fkey FOREIGN KEY (id_tipo_identificacion)
    REFERENCES public.tipo_identificacion (id_tipo_identificacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_tipo_identificacion_5420b826
    ON public.usuarios(id_tipo_identificacion);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_tipo_sangre_1d4491ee_fk_tipo_sangre_id_tipo_sangre FOREIGN KEY (id_tipo_sangre)
    REFERENCES public.tipo_sangre (id_tipo_sangre) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_tipo_sangre_1d4491ee
    ON public.usuarios(id_tipo_sangre);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_zona_residencial_38b6f1e5_fk_zona_resi FOREIGN KEY (id_zona_residencial)
    REFERENCES public.zona_residencial (id_zona_residencial) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS usuarios_id_zona_residencial_38b6f1e5
    ON public.usuarios(id_zona_residencial);


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_id_zona_residencial_fkey FOREIGN KEY (id_zona_residencial)
    REFERENCES public.zona_residencial (id_zona_residencial) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS usuarios_id_zona_residencial_38b6f1e5
    ON public.usuarios(id_zona_residencial);

END;
